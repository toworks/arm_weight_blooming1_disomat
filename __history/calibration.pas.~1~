unit calibration;

interface

uses
   Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
   Dialogs, StdCtrls, StrUtils;

type
  TCalibrationForm = class(TForm)

  private
    { Private declarations }
  public
    { Public declarations }
    constructor CreateNew(AOwner: TComponent; Dummy: Integer = 0); override;
  end;


var
    CalibrationForm: TCalibrationForm;
    procedure CreateTestingForm(Sender: TObject);

implementation


uses
    main, settings, logging, thread_comport;


constructor TCalibrationForm.CreateNew(AOwner: TComponent; Dummy: Integer = 0);
begin
  inherited CreateNew(AOwner);
  MemoTesting := TMemo.Create(Self);
  MemoTesting.Ctl3D := False;
  MemoTesting.SetBounds(2, 2, 590, 300);
  MemoTesting.Parent := Self;

  b_ForceSendAttribute := TButton.Create(Self);
  b_ForceSendAttribute.SetBounds(2, 310, 130, 20);
  b_ForceSendAttribute.Caption := 'Послать признак';
  b_ForceSendAttribute.OnClick := b_ForceSendAttributeClick;
  b_ForceSendAttribute.Parent := Self;
end;


procedure CreateTestingForm(Sender: TObject);
var
  i: integer;
begin
  CalibrationForm := TCalibrationForm.CreateNew(nil);
  try
    CalibrationForm.Height := 360;
    CalibrationForm.Width := 600;
    //запрет на изменение формы
    CalibrationForm.BorderStyle := bsToolWindow;
    CalibrationForm.BorderIcons := TestingForm.BorderIcons - [biMaximize];
    CalibrationForm.Caption := ' колибровка';
    CalibrationForm.Icon := Form1.Icon;
    CalibrationForm.Position := poMainFormCenter;
    CalibrationForm.ShowModal;
  finally
    FreeAndNil(l_calibration);
    FreeAndNil(CalibrationForm);
  end;
end;





end.
