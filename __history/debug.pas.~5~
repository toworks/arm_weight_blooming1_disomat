unit debug;

interface

uses
   Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
   Dialogs, StdCtrls, StrUtils, Data.DB, pFIBQuery;

type
//  TDebugForm = class(TForm)
  TDebugForm = class(TForm)


  private
    { Private declarations }
  public
    { Public declarations }
    constructor CreateNew(AOwner: TComponent; Dummy: Integer = 0); override;
  end;


//var
//  dd: bool;
    procedure db(Sender: TObject);

implementation


uses
    main, settings, logging, module, thread_comport, thread_sql;


constructor TDebugForm.CreateNew(AOwner: TComponent; Dummy: Integer = 0);
begin
  inherited CreateNew(AOwner);
end;


procedure db(Sender: TObject);
var
  DebugForm: TDebugForm;
begin
  DebugForm := TDebugForm.CreateNew(nil);
  try
    DebugForm.Height := 400;
    DebugForm.Width := 600;
    //запрет на изменение формы
    DebugForm.BorderStyle := bsToolWindow;
    DebugForm.BorderIcons := DebugForm.BorderIcons - [biMaximize];
    DebugForm.Caption := ' тестирование';
    DebugForm.Icon := Form1.Icon;
    DebugForm.ShowModal;
  finally
    DebugForm.Free;
  end;
{
//Application.CreateForm(TDebugForm, DebugForm);
DebugForm:=TDebugForm.CreateNew(nil);
//  DebugForm := TDebugForm.Create(Application);
  DebugForm.caption := 'DynaForm';
  DebugForm.Position := poScreenCenter;
  DebugForm.ShowModal;
  DebugForm.Free;
}
end;




end.
