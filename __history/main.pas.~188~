{
Пункт меню в приборе DISOMAT 432:Интерфейсы
Интерфейс – S1
Физика - RS232
Скорость - 9600
Установление связи -  Вык
Данные – 8 бит чет
Стоповый бит - 1

Пункт меню в приборе DISOMAT 4331:Коммуникация
Интерфейс – ЭОД S1
Процедура - DDP 8785

ApdComPort
Parity - pEven


при настройке interbase
сначало устанавливается драйвер ODBC firebird
настраивается соединение в Панель управления>Все элементы панели управления>Администрирование>Источники данных (ODBC)
название соединения = firebird
ip = 10.21.22.22
путь к базе = c:\Account.gdb
login = SYSDBA
password = MASTERKEY
}

unit main;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ShellAPI, StdCtrls, Mask, Menus, Grids, DBGrids, DBTables, ExtCtrls,
  Commctrl;

type
  TForm1 = class(TForm)
    l_current_id: TLabel;
    l_next_id: TLabel;
    DBGrid1: TDBGrid;
    b_selected: TButton;
    l_n_weight_ingot: TLabel;
    l_weight_ingot: TLabel;
    l_grade: TLabel;
    l_n_grade: TLabel;
    l_n_heat: TLabel;
    l_heat: TLabel;
    l_datetime: TLabel;
    l_n_datetime: TLabel;
    l_n_current_shift: TLabel;
    l_current_shift: TLabel;
    l_number_ingot: TLabel;
    l_n_number_ingot: TLabel;
    TrayIcon: TTrayIcon;
    gb_global: TGroupBox;
    gb_data_pu1: TGroupBox;
    gb_weighed_ingot: TGroupBox;
    b_test: TButton;
    procedure FormCreate(Sender: TObject);
    procedure TrayIconClick(Sender: TObject);
    procedure TrayPopUpCloseClick(Sender: TObject);
    procedure FormCloseQuery(Sender: TObject; var CanClose: Boolean);
    procedure b_selectedClick(Sender: TObject);
    procedure b_testClick(Sender: TObject);


  private
    { Private declarations }
  public
    { Public declarations }
  end;


var
  Form1: TForm1;
    CurrentDir: string;
    HeadName: string = 'АРМ резчика ПУ-4';
    Version: string = '0.0alpha';
    DBFile: string = 'data.sdb';
    LogFile: string = 'app.log';
    PopupTray: TPopupMenu;
    TrayMark: bool = false;

    formattedDateTime: string;


    {$DEFINE DEBUG}


    //new
    function ViewSelectedIngot: bool;
    function PointReplace(DataIn: string): string;

    function TrayAppRun: bool;
    function CheckAppRun: bool;
    function ViewClear: bool;
    function CurrentShift: string;
    function NextWeightToRecord: bool;
    function ShowTrayMessage(InTitle, InMessage: string; InFlag: TBalloonFlags): bool;

implementation

uses
  settings, logging, module, thread_comport, thread_sql, sql;

{$R *.dfm}





procedure TForm1.b_selectedClick(Sender: TObject);
begin
  if MessageDlg('Выбрать заготовку для взвешивания?', mtCustom, mbYesNo, 0) = mrYes then
   begin
      ViewSelectedIngot;
   end;
end;


procedure TForm1.b_testClick(Sender: TObject);
var
  i,m: integer;
begin

  l_current_id.Caption := pkdat+'|'+num+'|'+num_ingot;


  ShowTrayMessage('title', 'wklhehfuiohrgwerebrgyrfgey');


  //test
//  SqlSaveInBuffer(inttostr(random(100))+'.88');
//  SqlSaveToOracleOfBuffer;


{
 if pkdat = '' then
  DBGrid1.DataSource.DataSet.MoveBy(-1)
  else
  begin
      while not DBGrid1.DataSource.DataSet.Eof do
       begin

                if (DBGrid1.DataSource.DataSet.FieldByName('pkdat').AsString = pkdat) and
                   (DBGrid1.DataSource.DataSet.FieldByName('num').AsString = num) and
                   (DBGrid1.DataSource.DataSet.FieldByName('num_ingot').AsString = num_ingot)  then
                    BEGIN
            //        DBGrid1.DataSource.DataSet.MoveBy(DBGrid1.DataSource.DataSet.RecNo);
            showmessage(inttostr(DBGrid1.DataSource.DataSet.RecNo));
                    exit;
                    END;

          DBGrid1.DataSource.DataSet.Next;
       end;
 end;
   showmessage(DBGrid1.SelectedField.DataSet.FieldByName('num_ingot').AsString);
  }
end;


procedure TForm1.FormCreate(Sender: TObject);
begin
  //проверка 1 экземпляра программы
  CheckAppRun;

  Form1.Caption := HeadName+' v'+Version;
  //заголовки к showmessage
  Application.Title := HeadName+' v'+Version;

  //текущая дириктория
  CurrentDir := GetCurrentDir;

  //запрет на изменение формы
  Form1.BorderStyle := bsToolWindow;
  Form1.BorderIcons :=  Form1.BorderIcons - [biMaximize];

  SaveLog('app'+#9#9+'start');

  //инициализация трея
  TrayAppRun;

  form1.l_current_shift.Caption := CurrentShift;

  ViewClear;

  ConfigSettings(true);

  ThreadComPortInit;

  ThreadSqlInit;

end;


function NextWeightToRecord: bool;
var
  KeyValues : Variant;
begin

  SQuery.Close;
  SQuery.SQL.Clear;
  SQuery.SQL.Add('SELECT pkdat, num, num_ingot FROM weight');
  SQuery.SQL.Add('order by id desc limit 1');
  SQuery.Open;

  //отключаем управление
  form1.DBGrid1.DataSource.DataSet.DisableControls;
  try
      //переменные по которым будет производиться поиск
      KeyValues := VarArrayOf([SQuery.FieldByName('pkdat').AsString,
                               SQuery.FieldByName('num').AsString,
                               SQuery.FieldByName('num_ingot').AsString]);
      //поиск по ключивым полям
      form1.DBGrid1.DataSource.DataSet.Locate('pkdat;num;num_ingot', KeyValues, []);
  finally
      //включаем управление
      form1.DBGrid1.DataSource.DataSet.EnableControls;
  end;

  //перемещение вверх
  form1.DBGrid1.DataSource.DataSet.MoveBy(-1);

  pkdat := Form1.DBGrid1.DataSource.DataSet.FieldByName('pkdat').AsString;
  num := Form1.DBGrid1.DataSource.DataSet.FieldByName('num').AsString;
  num_ingot  := Form1.DBGrid1.DataSource.DataSet.FieldByName('num_ingot').AsString;
  time_ingot := Form1.DBGrid1.DataSource.DataSet.FieldByName('time_ingot').AsString;
  num_heat := Form1.DBGrid1.DataSource.DataSet.FieldByName('num_heat').AsString;
  name := Form1.DBGrid1.DataSource.DataSet.FieldByName('name').AsString;
  weight_ingot := Form1.DBGrid1.DataSource.DataSet.FieldByName('weight_ingot').AsString;
  smena := Form1.DBGrid1.DataSource.DataSet.FieldByName('smena').AsString;

  Form1.l_number_ingot.Caption := num_ingot;
  Form1.l_datetime.Caption := time_ingot;
  Form1.l_heat.Caption := num_heat;
  Form1.l_grade.Caption := name;
  Form1.l_weight_ingot.Caption := weight_ingot;

  //test
  Form1.l_next_id.Caption:=pkdat+'|'+num+'|'+num_ingot;
end;


function ViewSelectedIngot: bool;
begin
  Form1.l_number_ingot.Caption := Form1.DBGrid1.DataSource.DataSet.FieldByName('NUM_INGOT').AsString;
  Form1.l_datetime.Caption := Form1.DBGrid1.DataSource.DataSet.FieldByName('TIME_INGOT').AsString;
  Form1.l_heat.Caption := Form1.DBGrid1.DataSource.DataSet.FieldByName('NUM_HEAT').AsString;
  Form1.l_grade.Caption := Form1.DBGrid1.DataSource.DataSet.FieldByName('NAME').AsString;
  Form1.l_weight_ingot.Caption := Form1.DBGrid1.DataSource.DataSet.FieldByName('WEIGHT_INGOT').AsString;
  pkdat := Form1.DBGrid1.DataSource.DataSet.FieldByName('PKDAT').AsString;
  num := Form1.DBGrid1.DataSource.DataSet.FieldByName('NUM').AsString;
  num_ingot := Form1.DBGrid1.DataSource.DataSet.FieldByName('NUM_INGOT').AsString;
  smena := Form1.DBGrid1.DataSource.DataSet.FieldByName('SMENA').AsString;
end;


function PointReplace(DataIn: string): string;
begin
      result:=StringReplace(Datain,',','.', [rfReplaceAll]);
end;


function CurrentShift: string;
begin
    if (time > strtotime('22:00:00')) and (time < strtotime('07:00:00')) then
      Result := '1';
    if (time > strtotime('07:00:00')) and (time < strtotime('15:00:00')) then
      Result := '2';
    if (time > strtotime('15:00:00')) and (time < strtotime('22:00:00')) then
      Result := '3';
end;


function TrayAppRun: bool;
begin
    PopupTray := TPopupMenu.Create(nil);
    Form1.Trayicon.Hint := HeadName;
    Form1.Trayicon.PopupMenu := PopupTray;
    PopupTray.Items.Add(NewItem('выход', 0, False, True, Form1.TrayPopUpCloseClick, 0, 'close'));
    Form1.Trayicon.Visible := True;
end;


procedure TForm1.FormCloseQuery(Sender: TObject; var CanClose: Boolean);
begin
    CanClose := False;
    Form1.Hide;
end;


procedure TForm1.TrayPopUpCloseClick(Sender: TObject);
var
  buttonSelected: Integer;
begin
  ConfigComPort(false);

  ThreadComPort.Terminate;
  ThreadSql.Terminate;

  SaveLog('app'+#9#9+'close');

  Trayicon.Visible := false;
  //закрываем приложение
  TerminateProcess(GetCurrentProcess, 0);
end;


procedure TForm1.TrayIconClick(Sender: TObject);
begin
    if TrayMark then
     begin
//        ShowWindow(Wind, SW_SHOWNOACTIVATE);
//        SetForegroundWindow(Application.MainForm.Handle);
        form1.show;
        TrayMark := false;
     end
    else
     begin
//        ShowWindow(Application.MainForm.Handle, SW_HIDE);
//        SetForegroundWindow(Application.MainForm.Handle);
        form1.hide;
        TrayMark := true;
     end

//    Trayicon1.Visible := False;
//    PopupTray.Items.Delete(0);
end;


function CheckAppRun: bool;
var
  hMutex : THandle;
begin
    // закрытие 2 экземляра программы
    hMutex := CreateMutex(0, true , 'ArmWeightBlooming1');
    if GetLastError = ERROR_ALREADY_EXISTS then
     begin
        Application.Title := HeadName+' v'+Version;
        //прячим форму и выводим сообщение
        Application.ShowMainForm:=false;
        showmessage('Экземпляр программы уже запущен');

        CloseHandle(hMutex);
        TerminateProcess(GetCurrentProcess, 0);
     end;

end;


function ViewClear: bool;
var
  i: integer;
begin

  for i:=0 to form1.ComponentCount - 1 do
   begin
    if (form1.Components[i] is Tlabel) then
      begin
        if copy(form1.Components[i].Name,1,4) <> 'l_n_' then
          Tlabel(Form1.FindComponent(form1.Components[i].Name)).Caption := '';
      end;
   end;

end;


function ShowTrayMessage(InTitle, InMessage: string; Flag: TBalloonFlags): bool;
begin
  form1.TrayIcon.BalloonTitle := InTitle;
  form1.TrayIcon.BalloonHint := TimeToStr(NOW)+' '+InMessage;
  form1.TrayIcon.BalloonFlags. := bfInfo;
  form1.TrayIcon.BalloonTimeout := 5;
  form1.TrayIcon.ShowBalloonHint;
end;





end.
